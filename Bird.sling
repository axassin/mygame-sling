class is SpriteEntity imports cape imports cave imports motion #bird:

var distanceX as double
var distanceY as double
var distanceCollideX as double
var distanceCollideY as double
var gameScene as GameScene
var sceneWidth as double
var sceneHeight as double
var birdX as double
var birdY as double
var bird as TextureSprite

func createSprite override as Sprite
{

	gameScene = getScene() as GameScene
  sceneWidth = layer.getReferenceWidth()
  sceneHeight = layer.getReferenceHeight()
	var img = scene.createImageFromResource("bird")
	var texture = scene.createTextureForImage(img)
  bird = SpriteUtil.addTextureSpriteForSize(scene, layer, texture, sceneHeight * 0.05, sceneHeight * 0.05)
	birdX = sceneWidth - bird.getWidth()
	birdY = sceneHeight * 0.5
	bird.move(birdX, birdY)
	return bird
}

func getCenterX as double
{
	return sprite.getX() + sprite.getWidth() * 0.5
}

func getCenterY as double
{
	return sprite.getY() + sprite.getHeight() * 0.5
}

func tick(gameTime as TimeValue, delta as double) override
{
	base.tick(gameTime, delta)
	birdY -= (sprite.getY() - (gameScene.getPlayer().getY() - 0.005 * sprite.getHeight())) * 0.01
	birdX -= (sprite.getX() - (gameScene.getPlayer().getX() - 0.005 * sprite.getWidth())) * 0.01
//if(gameScene.collide(sprite, gameScene.getPlayer().getSprite())){
//	gameScene.switchToGameOverScene()
// }
	if(collide()){
		gameScene.switchToGameOverScene()
	}
	sprite.move(birdX , birdY)
}

func collide as bool
{
	var distanceX = Math.abs(getCenterX() - gameScene.getPlayer().getCenterX())
	var distanceY = Math.abs(getCenterY()- gameScene.getPlayer().getCenterY())
	var distanceCollideX = sprite.getWidth() * 0.3 + gameScene.getPlayer().getWidth() * 0.3
	var distanceCollideY = sprite.getHeight() * 0.3 + gameScene.getPlayer().getHeight() * 0.3
	return(distanceX < distanceCollideX && distanceY < distanceCollideY)
}

func cleanup override
{
	gameScene.removeSprite(sprite)
}

func getSprite as Sprite
{
	return sprite
}
