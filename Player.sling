class is SpriteEntity is PointerListener imports cape imports cave imports motion #player:

var playerX as double
var playerY as double
var gravity as double
var jumpWidth as double
var playerBase as double
var jumpForce as double
var player1 as TextureSprite
var gameScene as GameScene
var playerMove as boolean
var jumpHeight as double
var gameScene as GameScene
var playerFall as boolean


func createSprite override as Sprite
{
	gameScene = getScene() as GameScene
	//var playerImage = scene.createTextureForImageResource("image1")
	gameScene = getScene() as GameScene
	//player1 = gameScene.addTextureSpriteForSize(playerImage , gameScene.getReferenceWidth() * 0.1 , gameScene.getReferenceHeight() * 0.1)
	//player1.move(gameScene.getReferenceWidth() * 0.5 , gameScene.getReferenceHeight() * 0.5)


	gravity = 0.002
	jumpForce = 0.005
	playerMove = false
	playerFall = false


	var sceneWidth = layer.getReferenceWidth()
	var sceneHeight = layer.getReferenceHeight()

	var img = scene.createImageFromResource("image1")
	var texture = scene.createTextureForImage(img)
	player1 = SpriteUtil.addTextureSpriteForSize(scene, layer, texture, sceneHeight * 0.1, sceneHeight * 0.1)
	playerBase = gameScene.getReferenceHeight() * 0.78 - player1.getHeight()
	player1.move(sceneWidth * 0.5, playerBase)
	playerX = player1.getX()
	playerY = player1.getY()

	jumpHeight = gameScene.getReferenceHeight() * 0.3
	return player1
}

func onPointerEvent(event as PointerEvent) as bool
{
	if(event.action == PointerEvent.DOWN){
 		playerY -= 0.001
		playerMove = true
	}
	return false
}

func jump(delta as double)
{
	if(playerY >  jumpHeight && playerY < playerBase){
		playerY -= jumpForce + gravity
		playerFall = false
	}
	else{
		playerFall = true
		playerMove = false
	}
}

func fall(delta as double)
{
	if(playerY < playerBase){
		playerY += jumpForce + gravity
	}
	else{
		playerY = gameScene.getReferenceHeight() * 0.78 - player1.getHeight()
	}
}

func tick(gameTime as TimeValue, delta as double) override
{
	base.tick(gameTime, delta)

	if(playerY >= playerBase){
		playerMove = false
	}
	if(playerMove){
		jump(delta)
	}
	if(playerFall){
		PRINT(playerFall)
		fall(delta)
	}


	player1.move(playerX , playerY)

}

func ground as bool
{
	return (player1.getY() + player1.getHeight() > gameScene.getReferenceHeight())
}

func cleanup override
{

}
