class is SpriteEntity imports cape imports cave imports motion #tree:

var treeX as double
var player as Player
var distanceX as double
var distanceY as double
var distanceCollideX as double
var distanceCollideY as double
var gameScene as GameScene
var sceneWidth as double
var sceneHeight as double


func createSprite override as Sprite
{
	gameScene = getScene() as GameScene
  sceneWidth = layer.getReferenceWidth()
  sceneHeight = layer.getReferenceHeight()
	var img = scene.createImageFromResource("tree")
	var texture = scene.createTextureForImage(img)
	var tree = SpriteUtil.addTextureSpriteForSize(scene, layer, texture, sceneHeight * 0.1, sceneHeight * 0.1)
	tree.move( sceneWidth , sceneHeight * 0.78 - tree.getHeight())
	return tree
}

func collide as bool
{
	distanceX = Math.abs(getCenterX() - gameScene.getPlayer().getCenterX())
	distanceY = Math.abs(getCenterY()- gameScene.getPlayer().getCenterY())
	distanceCollideX = sprite.getWidth() * 0.5 + gameScene.getPlayer().getWidth() * 0.5
	distanceCollideY = sprite.getHeight() * 0.5 + gameScene.getPlayer().getHeight() * 0.5

	return(distanceX < distanceCollideX && distanceY < distanceCollideY)
}


func tick(gameTime as TimeValue, delta as double) override
{
	var x = sprite.getX() - delta * 0.3
	sprite.move(x , sceneHeight * 0.78 - sprite.getHeight())
	if(collide()){
		switchToGameOverScene()
	}
}

func getCenterX as double
{
	return sprite.getX() + sprite.getWidth() * 0.5
}

func getCenterY as double
{
	return sprite.getY() + sprite.getHeight() * 0.5
}


func cleanup override
{

}

func switchToGameOverScene
{
	gameScene.pushScene(new GameOverScene())
}
